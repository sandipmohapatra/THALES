String :-
-----------
1)String is a class in java.lang package
2)In java string is also considered as datatype
3)String object is Immutable(cannot be changed)
4)When we assign a value it create a new object and the value remains in memory.
Example :- String s1=“hello”;
 String s2=new String(“hello”);
Method :- length(),isEmpty(),charAt(),equals(),startWith(),endsWith(),indexOf(),lastIndexOf(),toUpperCase(),toLowerCase()
-----------------------------------------------------------------------------------------------------------------------
String Buffer:-
---------------------
1)It is a peer class of string and provides all functions of string.
2)It is mutable (can be modified) and expanded dynamically.
3)It is synchronized
Ex:-1) StringBuffer b=new StringBuffer(“hello”);
We pass “hello” to StringBuffer object “b”
2)StringBuffer b=new StringBuffer(50);
We can store 50 or more character .It is mutable so it expands dynamically
3)StringBuffer b=new StringBuffer()
StringBuffer object b is created with default capacity 16 character.
4)Methods :- append(),insert(),delete(),reverse()
--------------------------------------------------------------------------------------------


String Builder :-
--------------------
1)It is same as String Buffer
2)String Builder is not synchronized
3)String Buffer class takes more time to execute than StringBuilder.
-----------------------------------------------------------------------------------------------
String s1=”sandip”;
String s1=”kumar”;
Now the reference s1 contain new data the old object data is lost.
It is known as unreferenced object and garbage collector will remove it from memory.
---------------------------------------------------------
Example -1
------------------------
class demo1
{

	public static void main(String args[])
	{
	String s1="Aptech Computer Center";
	System.out.println(s1);
	System.out.println(s1.toUpperCase());
	System.out.println(s1.toLowerCase());
	System.out.println(s1.indexOf('e'));
	System.out.println(s1.lastIndexOf('e'));
	System.out.println(s1.substring(5));
	System.out.println(s1.substring(5,10));
	System.out.println(s1.startsWith("apt"));
	System.out.println(s1.endsWith("er"));
	System.out.println(s1.replace("center","Education"));
	
	String ss="aptech  computer center,mumbai";
	System.out.println(ss);
                  System.out.println(ss.replace("mumbai","Bangalore"));
	char name[]=s1.toCharArray();
	int leng=name.length;
	System.out.println(leng);
                  for(int i=0;i<leng;i++)
	{
		System.out.println(name[i]);
	}
	}

}
---------------------------------------------------------------------------
Example -2 
-------------------------
class concatenation
{  public static void main(String args[])
{  int age=25;
StringBuffer s=new StringBuffer(" She  is ");
StringBuffer s1=new StringBuffer(" Hello to HP ");
System.out.println("string buffer="+s);
System.out.println("s append="+s.append(age));
System.out.println("s append="+s.append(" years old."));
System.out.println("entire string="+s.toString());//convert object to string
System.out.println("length="+s.length());
System.out.println("capacity="+s.capacity());
System.out.println("s1="+s1);
System.out.println("charAt="+s1.charAt(1));
s1.setCharAt(1,'i');
s1.setLength(5);
System.out.println("s1="+s1);
System.out.println("set insert="+s1.insert(5,"welcome"));
System.out.println("to delete="+s1.delete(5,6));
System.out.println("to reverse="+s1.reverse());
System.out.println(s1);
}}
------------------------------------------------------------------------------------------

